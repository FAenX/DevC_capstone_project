paths:
  /auth/create-user:
    post:
      summary: Create user account.
      description: Admin can create an employee user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                gender:
                  type: string
                department:
                  type: string
                jobRole:
                  type: string
                isStaff:
                  type: boolean

      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    example: {
                      message: "User account successfully created",
                      token: "token",
                      userId: 4
                    }
        '401':
          description: You should be admin.
        '400':
          description: db constraint failed.
        default:
          description: Unexpected error

  /auth/signin:
    post:
      summary: Login a user
      description: Admin/Employees can sign in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    example: {
                      token: "token",
                      userId: 4
                    }
        '401':
          description: user not authenticated.
        default:
          description: Unexpected error

  /gifs:
    post:
      summary: Create a gif.
      description: 
      responses:
        '200':    # status code
          description: Gif
          content:
            application/json:
              schema: 
                type: object
                items: 
                  status: string
                  data:

  /gifs/:id:
    delete:
      summary: Delete an gif
      description: Employees can delete their gifs
      responses:
        '200':    # status code
          description: Gif
          content:
            application/json:
              schema: 
                type: object
                items: 
                  status: string
                  data:
    get:
      summary: GET an gif
      description: Employees can view a specific gif post
      responses:
        '200':    # status code
          description: Gif
          content:
            application/json:
              schema: 
                type: object
                items: 
                  status: string
                  data:

  /articles:
    post:
      summary: Create an article
      description: 
      responses:
        '200':    # status code
          description: Article
          content:
            application/json:
              schema: 
                type: object
                items: 
                  status: string
                  data:
  /articles/:id:
    patch:
      summary: Edit an article
      description: 
      responses:
        '200':    # status code
          description: Article
          content:
            application/json:
              schema: 
                type: object
                items: 
                  status: string
                  data:

  
    delete:
      summary: Delete an article
      description: Employees can delete their articles
      responses:
        '200':    # status code
          description: Article
          content:
            application/json:
              schema: 
                type: object
                items: 
                  status: string
                  data:
    get:
      summary: GET an article
      description: Employees can view a specific article
      responses:
        '200':    # status code
          description: Article
          content:
            application/json:
              schema: 
                type: object
                items: 
                  status: string
                  data:
  